sc_node_class
	-> atomic_logical_formula;
	-> target_node_class;
	-> current_node_class;
	-> class_fake;
	-> class_1;;

sc_node_role_relation
	-> rrel_1;
	-> rrel_main_key_sc_element;;

sc_node_norole_relation
	-> nrel_implication;;

if = [*
    _arg _<- current_node_class;;
    _arg _<- class_1;;
*];;

then = [*
    _arg _<- target_node_class;;
*];;

@p1 = (if => then);;
@p1 <- nrel_implication;;
@p2 = (logic_rule -> @p1);;
@p2 <- rrel_main_key_sc_element;;

atomic_logical_formula
	-> if;
	-> then;;

input_structures
	-> input_structure1;
	-> input_structure2;;

arguments
	-> argument;
	-> argument2;
	-> argument3;
	-> argument4;
	-> argument5;
	-> fake_argument;;

logic_rule
	-> rrel_1: argument;
	-> rrel_2: argument2;
	-> rrel_3: argument3;
	-> rrel_4: argument4;
	-> rrel_5: argument5;;

input_structure1 = [*
	argument <- current_node_class;;
	argument2 <- current_node_class;;
	argument3 <- current_node_class;;
	argument4 <- current_node_class;;
	argument5 <- current_node_class;;
	fake_argument <- class_1;;
*];;

input_structure2 = [*
	argument <- class_1;;
	argument2 <- class_1;;
	argument3 <- class_1;;
	argument4 <- class_1;;
	argument5 <- class_1;;
	fake_argument <- class_fake;;
*];;

formulas_set
    -> rrel_1: { logic_rule };;
