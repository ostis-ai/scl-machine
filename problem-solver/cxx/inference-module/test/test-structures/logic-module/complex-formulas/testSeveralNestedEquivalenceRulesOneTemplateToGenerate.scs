//types
sc_node_role_relation
    -> rrel_main_key_sc_element;;
sc_node_norole_relation
    -> nrel_equipment_normaly_in_service;
    -> nrel_is_power_supply;
    -> equivalence;;
sc_node_not_relation
    -> action_apply_rules_on_the_model;;
sc_node_structure
    -> test_output_structure;;

//initial model
test_input_structure = [*
    terminal_1 => nrel_equipment_usage_points: usage_points_tuple_1 (* -> usage_point_1;; -> usage_point_2;; *);;
    terminal_1 => nrel_connectivity_nodes: usage_connectivity_nodes_tuple_1 (* -> connectivity_node_1;; *);;
    terminal_2 => nrel_connectivity_nodes: usage_connectivity_nodes_tuple_2 (* -> connectivity_node_1;; *);;
*];;

//action description
inference_logic_test_action
    <- action_direct_inference;
    -> rrel_1: test_direct_inference_target;
    //-> rrel_2: test_rule_set (* -> test_rule_1;; -> test_rule_2;; *);
    -> rrel_3: test_input_structure;
    -> rrel_4: test_output_structure;;

//first rule
@rule_1_first_structure = [*
    _terminal _=> nrel_equipment_usage_points:: _usage_points_tuple;;
*];;
@rule_1_second_structure = [*
    _usage_point _<- _usage_points_tuple;;
*];;
@rule_1_third_structure = [*
    _terminal _=> cim_nrel_equipment_usage_point:: _usage_point;;
*];;
@rule_1_inner_equivalence_pair = (@rule_1_second_structure <=> @rule_1_third_structure);;
@rule_1_outer_equivalence_pair = (@rule_1_first_structure <=> @rule_1_inner_equivalence_pair);;
nrel_equivalence
    -> @rule_1_inner_equivalence_pair;
    -> @rule_1_outer_equivalence_pair;;
@rule_1_outer_equivalence_pair <- rrel_main_key_sc_element: test_rule_1;;

//second rule
@rule_2_first_structure = [*
    _terminal _=> nrel_connectivity_nodes:: _connectivity_nodes_tuple;;
*];;
@rule_2_second_structure = [*
    _connectivity_node _<- _connectivity_nodes_tuple;;
*];;
@rule_2_third_structure = [*
    _terminal _=> cim_nrel_connectivity_node:: _connectivity_node;;
*];;

test_direct_inference_target = [*
	@pair28 = (current_node_class _-> _x);;
*];;
@rule_2_third_structure <- concept_template_for_generation;;

@rule_2_inner_equivalence_pair = (@rule_2_second_structure <=> @rule_2_third_structure);;
@rule_2_outer_equivalence_pair = (@rule_2_first_structure <=> @rule_2_inner_equivalence_pair);;
nrel_equivalence
    -> @rule_2_inner_equivalence_pair;
    -> @rule_2_outer_equivalence_pair;;
@rule_2_outer_equivalence_pair <- rrel_main_key_sc_element: test_rule_2;;
