sc_node_class
	-> action_direct_inference;
	-> atomic_logical_formula;
	-> target_node_class;
	-> current_node_class;
	-> class_1;;

sc_node_role_relation
	-> rrel_1;
	-> rrel_2;
	-> rrel_3;
	-> rrel_4;
	-> rrel_main_key_sc_element;;

nrel_implication
  <- sc_node_norole_relation;;

target_template = [*
	current_node_class _-> _arg;;
	fake_node_class _-> _arg;;
*];;

if = [*
    current_node_class _-> _arg;;
*];;

then = [*
    target_node_class _-> _arg;;
*];;

@p1 = (if => then);;
@p1 <- nrel_implication;;
@p2 = (logic_rule -> @p1);;
@p2 <- rrel_main_key_sc_element;;

atomic_logical_formula
	-> if;
	-> then;;

concept_template_for_generation
	-> then;;

input_structure = [*
	argument <- current_node_class;;
	argument <- class_1;;
	fake_argument <- class_1;;
*];;

rules_set
    -> rrel_1: { logic_rule };;

four_arguments_action
    <- action_direct_inference;
    -> rrel_1: target_template;
    -> rrel_2: rules_set;
    -> rrel_3: input_structure;
    -> rrel_4: output_structure;;

argument_set
	-> argument;
	-> fake_argument;;

three_arguments_action
    <- action_direct_inference;
    -> rrel_1: target_template;
    -> rrel_2: rules_set;
    -> rrel_3: argument_set;;
